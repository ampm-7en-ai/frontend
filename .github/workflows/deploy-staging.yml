name: Deploy - Staging

on:
  push:
    branches: [ "staging" ]
  workflow_dispatch:

concurrency:
  group: deploy-staging
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging

    steps:
       - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.STAGING_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.STAGING_HOST }} >> ~/.ssh/known_hosts

      - name: Run deploy.sh on server
        run: |
          ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.STAGING_HOST }} "bash /home/ubuntu/7en-frontend/auto_deploy.sh"

      - name: Post-deploy health check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            URL="https://staging.7en.ai"
            if [ -f "/var/www/staging.7en.ai/scripts/health-check.sh" ]; then
              bash /var/www/staging.7en.ai/scripts/health-check.sh staging || true
            fi
            curl -fsSL "$URL" >/dev/null && echo "Healthy" || (echo "Health check failed" && exit 1)

      - name: Notify deployment (best-effort)
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            STATUS="${{ job.status }}"
            if [ -f "/var/www/staging.7en.ai/scripts/notify-deployment.sh" ]; then
              bash /var/www/staging.7en.ai/scripts/notify-deployment.sh staging "$STATUS" "GitHub Actions"
            fi
